{ config, lib, ... }: {
  services.tlp.settings = {
    TLP_ENABLE = lib.mkDefault 1;
    TLP_WARN_LEVEL = lib.mkDefault 3;
    TLP_DEFAULT_MODE = lib.mkDefault "AC";
    TLP_PERSISTENT_DEFAULT = lib.mkDefault 0; # disabled
    SOUND_POWER_SAVE_ON_AC = lib.mkDefault 1; # seconds
    SOUND_POWER_SAVE_ON_BAT = lib.mkDefault 1; # seconds
    SOUND_POWER_SAVE_CONTROLLER = lib.mkDefault "Y";
    # START_CHARGE_THRESH_BAT0 = 96; # hardware threshold
    # STOP_CHARGE_THRESH_BAT0 = 100; # hardware threshold
    START_CHARGE_THRESH_BAT0 = lib.mkDefault 75;
    STOP_CHARGE_THRESH_BAT0 = lib.mkDefault 80;
    RESTORE_THRESHOLDS_ON_BAT = lib.mkDefault 0; # disabled
    NATACPI_ENABLE = lib.mkDefault 1; # enabled
    TPACPI_ENABLE = lib.mkDefault 1; # enabled
    TPSMAPI_ENABLE = lib.mkDefault 1; # enabled
    DISK_DEVICES = lib.mkDefault "nvme0n1";
    DISK_APM_LEVEL_ON_AC = lib.mkDefault "254"; # performance
    DISK_APM_LEVEL_ON_BAT = lib.mkDefault "128"; # balanced
    DISK_APM_CLASS_DENYLIST = lib.mkDefault "usb ieee1394";
    DISK_SPINDOWN_TIMEOUT_ON_AC = lib.mkDefault "0"; # disabled for SSD
    DISK_SPINDOWN_TIMEOUT_ON_BAT = lib.mkDefault "0"; # disabled for SSD
    DISK_IOSCHED = lib.mkDefault "keep"; # use kernel value
    SATA_LINKPWR_ON_AC = lib.mkDefault "med_power_with_dipm max_performance";
    SATA_LINKPWR_ON_BAT = lib.mkDefault "med_power_with_dipm min_power";
    AHCI_RUNTIME_PM_ON_AC = lib.mkDefault "on";
    AHCI_RUNTIME_PM_ON_BAT = lib.mkDefault "auto";
    AHCI_RUNTIME_PM_TIMEOUT = lib.mkDefault 15; # seconds
    DISK_IDLE_SECS_ON_AC = lib.mkDefault 0;
    DISK_IDLE_SECS_ON_BAT = lib.mkDefault 2;
    MAX_LOST_WORK_SECS_ON_AC = lib.mkDefault 15;
    MAX_LOST_WORK_SECS_ON_BAT = lib.mkDefault 60;
    INTEL_GPU_MIN_FREQ_ON_AC = lib.mkDefault 300; # MHz
    INTEL_GPU_MIN_FREQ_ON_BAT = lib.mkDefault 300; # MHz
    INTEL_GPU_MAX_FREQ_ON_AC = lib.mkDefault 1450; # MHz
    INTEL_GPU_MAX_FREQ_ON_BAT = lib.mkDefault 1450; # MHz
    INTEL_GPU_BOOST_FREQ_ON_AC = lib.mkDefault 1450; # MHz
    INTEL_GPU_BOOST_FREQ_ON_BAT = lib.mkDefault 1450; # MHz
    NMI_WATCHDOG = lib.mkDefault 0; # disabled
    WIFI_PWR_ON_AC = lib.mkDefault "off";
    WIFI_PWR_ON_BAT = lib.mkDefault "on";
    WOL_DISABLE = lib.mkDefault "Y"; # wake-on-lan
    PLATFORM_PROFILE_ON_AC = lib.mkDefault "performance";
    PLATFORM_PROFILE_ON_BAT = lib.mkDefault "low-power";
    CPU_SCALING_GOVERNOR_ON_AC = lib.mkDefault "powersave";
    CPU_SCALING_GOVERNOR_ON_BAT = lib.mkDefault "powersave";
    # CPU_SCALING_MIN_FREQ_ON_AC = ""; # use CPU_MIN_PERF_ON_AC
    # CPU_SCALING_MIN_FREQ_ON_BAT = ""; # use CPU_MIN_PERF_ON_BAT
    # CPU_SCALING_MAX_FREQ_ON_AC = ""; # use CPU_MAX_PERF_ON_AC
    # CPU_SCALING_MAX_FREQ_ON_BAT = ""; # use CPU_MAX_PERF_ON_BAT
    CPU_ENERGY_PERF_POLICY_ON_AC = lib.mkDefault "balance_performance";
    CPU_ENERGY_PERF_POLICY_ON_BAT = lib.mkDefault "balance_power";
    # CPU_HWP_ON_AC = "balance_performance"; # use CPU_ENERGY_PERF_POLICY_ON_AC
    # CPU_HWP_ON_BAT = "balance_power"; # use CPU_ENERGY_PERF_POLICY_ON_BAT
    CPU_MIN_PERF_ON_AC = lib.mkDefault 10; # percent
    CPU_MAX_PERF_ON_AC = lib.mkDefault 100; # percent
    CPU_MIN_PERF_ON_BAT = lib.mkDefault 10; # percent
    CPU_MAX_PERF_ON_BAT = lib.mkDefault 70; # percent
    CPU_BOOST_ON_AC = lib.mkDefault 1; # enabled
    CPU_BOOST_ON_BAT = lib.mkDefault 0; # disabled
    CPU_HWP_DYN_BOOST_ON_AC = lib.mkDefault 1; # enabled
    CPU_HWP_DYN_BOOST_ON_BAT = lib.mkDefault 0; # disabled
    SCHED_POWERSAVE_ON_AC = lib.mkDefault 0; # disabled
    SCHED_POWERSAVE_ON_BAT = lib.mkDefault 1; # enabled
    # ENERGY_PERF_POLICY_ON_AC = "performance"; # use CPU_ENERGY_PERF_POLICY_ON_AC
    # ENERGY_PERF_POLICY_ON_BAT = "power"; # use CPU_ENERGY_PERF_POLICY_ON_BAT
    RESTORE_DEVICE_STATE_ON_STARTUP = lib.mkDefault 0; # disabled
    # DEVICES_TO_DISABLE_ON_STARTUP = "";
    # DEVICES_TO_ENABLE_ON_STARTUP = "";
    # DEVICES_TO_DISABLE_ON_SHUTDOWN = "";
    # DEVICES_TO_ENABLE_ON_SHUTDOWN = "";
    # DEVICES_TO_ENABLE_ON_AC = "";
    # DEVICES_TO_DISABLE_ON_BAT = "";
    DEVICES_TO_DISABLE_ON_BAT_NOT_IN_USE = lib.mkDefault "bluetooth wifi wwan";
    DEVICES_TO_DISABLE_ON_LAN_CONNECT = lib.mkDefault "wifi wwan";
    DEVICES_TO_DISABLE_ON_WIFI_CONNECT = lib.mkDefault "wwan";
    DEVICES_TO_DISABLE_ON_WWAN_CONNECT = lib.mkDefault "wifi";
    DEVICES_TO_ENABLE_ON_LAN_DISCONNECT = lib.mkDefault "wifi wwan";
    DEVICES_TO_ENABLE_ON_WIFI_DISCONNECT = lib.mkDefault "";
    DEVICES_TO_ENABLE_ON_WWAN_DISCONNECT = lib.mkDefault "";
    DEVICES_TO_ENABLE_ON_DOCK = lib.mkDefault "";
    DEVICES_TO_DISABLE_ON_DOCK = lib.mkDefault "wifi";
    DEVICES_TO_ENABLE_ON_UNDOCK = lib.mkDefault "wifi";
    DEVICES_TO_DISABLE_ON_UNDOCK = lib.mkDefault "";
    RUNTIME_PM_ON_AC = lib.mkDefault "on";
    RUNTIME_PM_ON_BAT = lib.mkDefault "auto";
    RUNTIME_PM_DENYLIST = lib.mkDefault "";
    RUNTIME_PM_DRIVER_DENYLIST = lib.mkDefault "mei_me nouveau radeon";
    # RUNTIME_PM_ENABLE = "";
    # RUNTIME_PM_DISABLE = "";
    PCIE_ASPM_ON_AC = lib.mkDefault "default";
    PCIE_ASPM_ON_BAT = lib.mkDefault "default";
    USB_AUTOSUSPEND = lib.mkDefault 1; # enabled
    USB_DENYLIST = lib.mkDefault "";
    USB_EXCLUDE_AUDIO = lib.mkDefault 1; # enabled
    USB_EXCLUDE_BTUSB = lib.mkDefault 0; # disabled
    USB_EXCLUDE_PHONE = lib.mkDefault 0; # disabled
    USB_EXCLUDE_PRINTER = lib.mkDefault 1; # enabled
    USB_EXCLUDE_WWAN = lib.mkDefault 0; # disabled
    USB_ALLOWLIST = lib.mkDefault "";
    USB_AUTOSUSPEND_DISABLE_ON_SHUTDOWN = lib.mkDefault 0; # disabled
  };
}
